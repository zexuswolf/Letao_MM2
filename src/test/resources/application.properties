##########
# Prod   #
##########

#spring.main.banner-mode=off

security.basic.enabled=false
management.security.enabled=false

# create and drop tables and sequences, loads import.sql
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.show_sql=true
spring.datasource.continue-on-error=true

# Oracle settings
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=system
spring.datasource.password=oracle
spring.datasource.driver-class-oracle.jdbc.driver.OracleDriver
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

# HikariCP settings
# spring.datasource.hikari.*

#spring.datasource.hikari.connection-timeout=60000
#spring.datasource.hikari.maximum-pool-size=5

# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.=error

# Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.
# spring.batch.initializer.enabled=true
# Execute all Spring Batch jobs in the context on startup.
spring.batch.job.enabled=false
#spring.batch.job.names= # Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.
#spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.batch.table-prefix=LETAO_MM # Table prefix for all the batch meta-data tables.